<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button2.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAASUVORK5CYII=
</value>
  </data>
</root>